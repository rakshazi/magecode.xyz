<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[MageCode]]></title>
    <link href="http://magecode.xyz/atom.xml" rel="self"/>
    <link href="http://magecode.xyz/"/>
    <updated>2016-05-24T09:32:32+00:00</updated>
    <id>http://magecode.xyz/</id>
    <author>
        <name><![CDATA[Nikita Chernyi]]></name>            </author>
    <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[301 redirect from product url duplicates]]></title>
            <link href="http://magecode.xyz/2016/05/24/301-redirects-from-product-url-duplicates"/>
            <updated>2016-05-24T00:00:00+00:00</updated>
            <id>http://magecode.xyz/2016/05/24/301-redirects-from-product-url-duplicates</id>
            <author>
                <name> Nikita Chernyi </name>
            </author>
            <content type="html"><![CDATA[<p>Magento allow you to create multiple urls for one product page, for example:</p>

<pre><code>http://example.com/product.html
http://example.com/category1/product.html
http://example.com/great-sale-2016/product.html
</code></pre>

<p>Some SEO specialists say that it's very bad for SEO, thats why you need create 301 redirect from all product urls, except main url (<code>http://example.com/product.html</code>).</p>

<p>Here you can find solution in 5 strings of code which will redirect customers from any additional product url to main url.</p>


   <p><a href="http://magecode.xyz/2016/05/24/301-redirects-from-product-url-duplicates" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Web server with Nginx, Letsencrypt SSL, and HTTP/2]]></title>
            <link href="http://magecode.xyz/2016/01/04/nginx-letsencrypt-http2"/>
            <updated>2016-01-04T00:00:00+00:00</updated>
            <id>http://magecode.xyz/2016/01/04/nginx-letsencrypt-http2</id>
            <author>
                <name> Nikita Chernyi </name>
            </author>
            <content type="html"><![CDATA[<p>HTTP/2 and Let's Encrypt free SSL certificates are ready for production now.</p>

<p>Here I want to describe you, how to use Nginx with Let's Encrypt certificate (with A+ rank on SSLLabs) and HTTP/2 on Ubuntu 14.04.xx</p>

<!--break-->

<blockquote>
  <p>All actions in console must be under <strong>root</strong> user (call <em>sudo su</em> before start)</p>
</blockquote>

<h2 id="nginx">Nginx</h2>

<p>You need to add nginx deb repositories, because in ubuntu repos nginx is outdated (no HTTP/2 support):</p>

<pre><code class="bash">touch /etc/apt/sources.list.d/nginx.list
echo "deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx" &gt;&gt; /etc/apt/sources.list.d/nginx.list
echo "deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx" &gt;&gt; /etc/apt/sources.list.d/nginx.list
wget -q -O- http://nginx.org/keys/nginx_signing.key | apt-key add -
apt-get -qq update
apt-get install nginx
</code></pre>

<blockquote>
  <p>If you already have nginx installed, remove it, because new version (1.99 for now) will conflict with nginx-common package.</p>
</blockquote>

<p>Ok, you have latest stable nginx with HTTP/2 suppport, but you need to enable it.</p>

<p>Open your site config (default is <code>/etc/nginx/sites-enabled/default</code>) and replace <code>listen</code> lines with following ( <strong>before any other config</strong> ):</p>

<blockquote>
  <p>Change <strong>YOURDOMAIN</strong> in <code>servername</code>, <code>ssl_certificate</code> and <code>ssl_certificate_key</code> to your site address, eg: magecode.xyz\</p>
  
  <p>SSL will be configured later.</p>
</blockquote>

<pre><code>#upstream php-handler {
#  server unix:/var/run/php5-fpm.sock;
#}

#server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2; # This line needed only if you use IPv6
    servername YOURDOMAIN; # Change it to your domain name
    ssl_certificate /etc/letsencrypt/live/YOURDOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/YOURDOMAIN/privkey.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_dhparam /etc/nginx/ssl/dhparams.pem;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    # Add headers to serve security related headers
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Robots-Tag none;

    # ...

#}
</code></pre>

<p>Here is my "base" config for any project:</p>

<pre><code>upstream php-handler {
  server unix:/var/run/php5-fpm.sock;
}

server {
  listen 80;
  server_name YOURDOMAIN;
  # enforce https
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl http2;
  server_name YOURDOMAIN;

  ssl_certificate /etc/letsencrypt/live/YOURDOMAIN/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/YOURDOMAIN/privkey.pem;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+A
ESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256
-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA2
56:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_dhparam /etc/nginx/ssl/dhparams.pem;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  # Add headers to serve security related headers
  add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Robots-Tag none;

  # Path to the root of your installation
  root /var/www/YOURDOMAIN/;
  # set max upload size
  client_max_body_size 10G;
  fastcgi_buffers 64 4K;

  # Disable gzip to avoid the removal of the ETag header
  gzip off;

  # Uncomment if your server is build with the ngx_pagespeed module
  # This module is currently not supported.
  #pagespeed off;

  index index.php;

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  location ~ ^/(build|tests)/ {
    deny all;
  }

  location ~ ^/(?:\.|autotest|console) {
    deny all;
  }

  location / {
    try_files $uri $uri/ /index.php;
  }

  location ~ \.php(?:$|/) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
    fastcgi_param HTTPS on;
    fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice
    fastcgi_pass php-handler;
    fastcgi_intercept_errors on;
  }

  # Adding the cache control header for js and css files
  # Make sure it is BELOW the location ~ \.php(?:$|/) { block
  location ~* \.(?:css|js)$ {
    add_header Cache-Control "public, max-age=7200";
    # Add headers to serve security related headers
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Robots-Tag none;
    # Optional: Don't log access to assets
    access_log off;
  }

  # Optional: Don't log access to other assets
  location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|swf)$ {
    access_log off;
  }
}

</code></pre>

<p>Add this line to the end of <code>http</code> section of <code>/etc/nginx/nginx.conf</code> (new nginx version removed this line from <code>nginx.conf</code>):</p>

<pre><code>include /etc/nginx/sites-enabled/*;
</code></pre>

<p>And create <code>/etc/nginx/ssl/dhparams.pem</code> (needed to enable Forward Secrecy):</p>

<pre><code class="bash">mkdir /etc/nginx/ssl
openssl dhparam -out /etc/pki/nginx/dhparams.pem 4096
</code></pre>

<blockquote>
  <p>Test your nginx configuration with <code>nginx -t</code> command before next steps</p>
</blockquote>

<p>Congratulation! Nginx now can handle requests via HTTP/2</p>

<h2 id="let%27s-encrypt-free-ssl-certificate">Let's Encrypt free SSL certificate</h2>

<p>You need to install special client to get Let's Encrypt SSL certificate:</p>

<pre><code class="bash">git clone https://github.com/letsencrypt/letsencrypt
cd letsencrypt
./letsencrypt-auto --server https://acme-v01.api.letsencrypt.org/directory -v --help
</code></pre>

<p>If all ok, now you can generate ssl ceritificate for your domain (you must stop any webserver on 80 and 443 port):</p>

<blockquote>
  <p>Follow the prompts and change <strong>YOURDOMAIN</strong> to your site address, eg: magecode.xyz</p>
</blockquote>

<pre><code class="bash">service nginx stop
./letsencrypt-auto certonly -a standalone -d YOURDOMAIN -d www.YOURDOMAIN --server https://acme-v01.api.letsencrypt.org/directory --agree-dev-preview -v
</code></pre>

<p>If all ok, you will have SSL certificate for your domain (www. domain will be added as alias).
All cert files placed in <code>/etc/letsencrypt/live/YOURDOMAIN/</code> dir, you can do <code>ls</code> on it to see them.</p>

<p>Now you can start your nginx server:</p>

<pre><code class="bash">service nginx start
</code></pre>

<p>Congratulation! Now your site will work on HTTP/2 protocol with Let's Encrypt SSL certificate and <strong>A+</strong> rank on SSLLabs.</p>

<blockquote>
  <p>If you not yet tested your site, go to <a href="https://www.ssllabs.com/ssltest/analyze.html">SSL Labs</a> and test it.</p>
</blockquote>

<p>I hope, this article will help to build fast and protected web.</p>

]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Disable Magento Full Page Cache for block]]></title>
            <link href="http://magecode.xyz/2015/12/18/magento-disable-fpc-for-block"/>
            <updated>2015-12-18T00:00:00+00:00</updated>
            <id>http://magecode.xyz/2015/12/18/magento-disable-fpc-for-block</id>
            <author>
                <name> Nikita Chernyi </name>
            </author>
            <content type="html"><![CDATA[<p>Magento Enterprise Edition Full Page Cache is a great feature that significantly improves the frontend performance.
Nevertheless, it is causing the troubles with the customisations that require the dynamic content output.
As you may know, the customer and cart information custom outputs are the first “victims” there, especially,
if you migrated your Magento store from Community to Enterprise Edition.
Some of the custom solutions, as well as the Mage Store modules, may not be ready for such migration.
This brief article will not only show how to avoid a separate block caching in FPC, but also uncover the way how it works.

   <p><a href="http://magecode.xyz/2015/12/18/magento-disable-fpc-for-block" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Magento chooser widget in adminhtml forms]]></title>
            <link href="http://magecode.xyz/2015/12/17/magento-chooser-widget-in-adminhtml-forms"/>
            <updated>2015-12-17T00:00:00+00:00</updated>
            <id>http://magecode.xyz/2015/12/17/magento-chooser-widget-in-adminhtml-forms</id>
            <author>
                <name> Tsvetan Stoychev </name>
            </author>
            <content type="html"><![CDATA[<p><img src="/media/posts/2015-12-17-magento-chooser-widget-in-adminhtml-forms/chooser.png" alt="Product chooser" /></p>

<p>Magento extension that gives the ability to create Product, Category, CMS Page and Static Block choosers in generic admin forms.

   <p><a href="http://magecode.xyz/2015/12/17/magento-chooser-widget-in-adminhtml-forms" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Load single product attribute vs. load entire product]]></title>
            <link href="http://magecode.xyz/2015/12/17/load-single-product-attribute-vs-load-entire-product"/>
            <updated>2015-12-17T00:00:00+00:00</updated>
            <id>http://magecode.xyz/2015/12/17/load-single-product-attribute-vs-load-entire-product</id>
            <author>
                <name> Tsvetan Stoychev </name>
            </author>
            <content type="html"><![CDATA[<p>Let’s assume that as developer you are in following situation:
You know a product id and you have to fetch single attribute value of a product which id you already know.
For example let’s try to get color attribute of Magento product.</p>

<p><strong>Question</strong>: How would you do it?
Are you going to load the product or you would look for more efficient solutions in order to fetch only the attribute you are looking for?</p>

<p>Magento allows us to fetch product attribute in many ways and depending on the context we could choose one.
I am definitely against loading entire product in case there are much more efficient solutions and the goal is to fetch single product attribute
(not all product attributes).</p>

<p>I think that people choose the easy way because:</p>

<ul>
<li>People read the first answer (which sometimes is not the most efficient) in StackOverflow but don’t check other answers.</li>
<li>There is a lack of Magento documentation.</li>
<li>Missing out of the box way how to accomplish the task.</li>
<li>There are many examples in Internet but they are not descriptive enough to explain what happens on background and how efficient they are.</li>
</ul>

<p>As first example,
I would like to start with one of the efficient ways because I know many people would copy / paste this solution in their project,
stop reading and continue with their daily work.

   <p><a href="http://magecode.xyz/2015/12/17/load-single-product-attribute-vs-load-entire-product" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Compatibility extension for Magento 1 and PHP 7]]></title>
            <link href="http://magecode.xyz/2015/12/17/compatibility-extension-for-magento-1-and-php-7"/>
            <updated>2015-12-17T00:00:00+00:00</updated>
            <id>http://magecode.xyz/2015/12/17/compatibility-extension-for-magento-1-and-php-7</id>
            <author>
                <name> Ivan Curdinjakovic </name>
            </author>
            <content type="html"><![CDATA[<p>As promised,  we prepared something that will spice up your holidays better than Christmas decorations and mulled wine.
In this article you can find <strong>our open-source compatibility extension for Magento and PHP 7</strong> (yes, you read that right!)
as well as some of the experiences and performance tests.</p>

<p>We, at Inchoo, already have a few Magento 1 projects running fine on development servers with PHP 7. <em>It’s alive</em>, we say!</p>

<h4 id="and-quite-lively%2C-actually.">And quite lively, actually.</h4>

<p>Despite the official status, Magento 1 loves working on a server with PHP 7. And we love PHP 7.

   <p><a href="http://magecode.xyz/2015/12/17/compatibility-extension-for-magento-1-and-php-7" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[An error occurred while saving the URL rewrite]]></title>
            <link href="http://magecode.xyz/2015/12/17/url-indexer-duplicate-records-problem"/>
            <updated>2015-12-17T00:00:00+00:00</updated>
            <id>http://magecode.xyz/2015/12/17/url-indexer-duplicate-records-problem</id>
            <author>
                <name> Tsvetan Stoychev </name>
            </author>
            <content type="html"><![CDATA[<p>Last few weeks I was fighting with problem that partially broke Magento url indexer.
Basically the url indexer was working but at certain point it was breaking.
At this point I was getting exception and not all url rewrites were written to core_url_rewrite table.
Everyday the problem was getting bigger and bigger because all new products contained “catalog/product/view/id”
(I call those urls – “ugly” urls) but the desired urls suppose to be human readable and end with “.html”.</p>

<p>This issue could be reproduced only on live environment and in order to reproduce it locally
I had to copy all catalog tables (<code>catalog_*</code>) and <code>core_url_rewrite</code> table from live to local environment.</p>

<p>When I run Magento url indexer from command line I got:</p>

<pre><code>php shell/indexer.php --reindex catalog_url
An error occurred while saving the URL rewrite
</code></pre>

<p>In Magento exception log I had:</p>

<pre><code>exception 'PDOException' with message 'SQLSTATE[23000]:
Integrity constraint violation: 1062 Duplicate entry 'product/2469/361-1-1'
for key 'UNQ_CORE_URL_REWRITE_ID_PATH_IS_SYSTEM_STORE_ID''
</code></pre>


   <p><a href="http://magecode.xyz/2015/12/17/url-indexer-duplicate-records-problem" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Using local repositories to easily install private Magento extensions with Composer]]></title>
            <link href="http://magecode.xyz/2015/12/14/using-local-repositories-to-easily-install-private-magento-extensions-with-composer"/>
            <updated>2015-12-14T00:00:00+00:00</updated>
            <id>http://magecode.xyz/2015/12/14/using-local-repositories-to-easily-install-private-magento-extensions-with-composer</id>
            <author>
                <name> Barry vd. Heuvel </name>
            </author>
            <content type="html"><![CDATA[<p>There are a few ways to handle Magento extensions, for example:</p>

<ul>
<li>Magento Connect</li>
<li>Copying files in the Magento directory</li>
<li>Use Composer (with composer-installer)</li>
</ul>

<p>I’m a fan of using Composer (in- and outside Magento), so I like to use that option.
This works great for free packages listed on Magento connect or <a href="http://packages.firegento.com">Firegento Packages</a>,
because you can just require the packages and run composer update. A few advantages over the other 2 options:</p>

<ul>
<li>Easier to update packages (run ‘composer update’)</li>
<li>Keep your Magento dir clean</li>
<li>Easy to install (‘composer remove’ and the files are really gone)

   <p><a href="http://magecode.xyz/2015/12/14/using-local-repositories-to-easily-install-private-magento-extensions-with-composer" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Webshopapps/Matrixrate free shipping based on price incl. tax]]></title>
            <link href="http://magecode.xyz/2015/08/09/webshopapps-matrixrate-free-shipping-based-on-price-incl-tax"/>
            <updated>2015-08-09T00:00:00+00:00</updated>
            <id>http://magecode.xyz/2015/08/09/webshopapps-matrixrate-free-shipping-based-on-price-incl-tax</id>
            <author>
                <name> Nikita Chernyi </name>
            </author>
            <content type="html"><![CDATA[<h3 id="what-is-it%3F">What is it?</h3>

<p>Magento module Webshopapps/Matrixrate allows you to give customer free shipping option if order totals will cost more than some money.</p>

<h3 id="problem">Problem</h3>

<p>This module calculates only products price without included tax.</p>

<p>Imagine:</p>

<p>You have a store. You have product with base (real) price $8, but with tax (eg: $3) it will cost $11. You set in store settings that on the frontend part for customers must be displayed only price with included tax ($11). And you set in Webshopapps/Matrixrate config that free shipping option must be shown for order amount > $100.</p>

<p>Customer buys 10 products by $11 each, but module will calculate only base (real) price - $8 for each product. In that way, customer will see order total amount as $110 but he will have no free shipping option.

   <p><a href="http://magecode.xyz/2015/08/09/webshopapps-matrixrate-free-shipping-based-on-price-incl-tax" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Change order status to &#039;Complete&#039;]]></title>
            <link href="http://magecode.xyz/2015/08/09/change-order-status-to-complete"/>
            <updated>2015-08-09T00:00:00+00:00</updated>
            <id>http://magecode.xyz/2015/08/09/change-order-status-to-complete</id>
            <author>
                <name> Nikita Chernyi </name>
            </author>
            <content type="html"><![CDATA[<p>You can easily change order status programmaticaly in Magento,
but you can't do it freely with "Complete" status
because you need create invoice and shipment for this.</p>

<p>Here is code snippet to change order status to "Complete".

   <p><a href="http://magecode.xyz/2015/08/09/change-order-status-to-complete" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
    </feed>