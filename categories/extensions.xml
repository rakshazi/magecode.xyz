<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[MageCode]]></title>
    <link href="http://magecode.xyz/atom.xml" rel="self"/>
    <link href="http://magecode.xyz/"/>
    <updated>2015-12-16T17:39:08+02:00</updated>
    <id>http://magecode.xyz/</id>
    <author>
        <name><![CDATA[Nikita Cherniy]]></name>        <email><![CDATA[magecode.xyz@openaliasbox.org]]></email>    </author>
    <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Using local repositories to easily install private Magento extensions with Composer]]></title>
            <link href="http://magecode.xyz/2015/12/14/using-local-repositories-to-easily-install-private-magento-extensions-with-composer"/>
            <updated>2015-12-14T00:00:00+02:00</updated>
            <id>http://magecode.xyz/2015/12/14/using-local-repositories-to-easily-install-private-magento-extensions-with-composer</id>
            <author>
                <name> Barry vd. Heuvel </name>
            </author>
            <content type="html"><![CDATA[<p>There are a few ways to handle Magento extensions, for example:</p>

<ul>
<li>Magento Connect</li>
<li>Copying files in the Magento directory</li>
<li>Use Composer (with composer-installer)</li>
</ul>

<p>I’m a fan of using Composer (in- and outside Magento), so I like to use that option.
This works great for free packages listed on Magento connect or <a href="http://packages.firegento.com">Firegento Packages</a>,
because you can just require the packages and run composer update. A few advantages over the other 2 options:</p>

<ul>
<li>Easier to update packages (run ‘composer update’)</li>
<li>Keep your Magento dir clean</li>
<li>Easy to install (‘composer remove’ and the files are really gone)

   <p><a href="http://magecode.xyz/2015/12/14/using-local-repositories-to-easily-install-private-magento-extensions-with-composer" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Webshopapps/Matrixrate free shipping based on price incl. tax]]></title>
            <link href="http://magecode.xyz/2015/08/09/webshopapps-matrixrate-free-shipping-based-on-price-incl-tax"/>
            <updated>2015-08-09T00:00:00+03:00</updated>
            <id>http://magecode.xyz/2015/08/09/webshopapps-matrixrate-free-shipping-based-on-price-incl-tax</id>
            <author>
                <name> Nikita Cherniy </name>
            </author>
            <content type="html"><![CDATA[<h3 id="what-is-it%3F">What is it?</h3>

<p>Magento module Webshopapps/Matrixrate allows you to give customer free shipping option if order totals will cost more than some money.</p>

<h3 id="problem">Problem</h3>

<p>This module calculates only products price without included tax.</p>

<p>Imagine:</p>

<p>You have a store. You have product with base (real) price $8, but with tax (eg: $3) it will cost $11. You set in store settings that on the frontend part for customers must be displayed only price with included tax ($11). And you set in Webshopapps/Matrixrate config that free shipping option must be shown for order amount > $100.</p>

<p>Customer buys 10 products by $11 each, but module will calculate only base (real) price - $8 for each product. In that way, customer will see order total amount as $110 but he will have no free shipping option.

   <p><a href="http://magecode.xyz/2015/08/09/webshopapps-matrixrate-free-shipping-based-on-price-incl-tax" class="btn btn-info pull-right">Read more &raquo;</a></p>
]]></content>
        </entry>
    </feed>